// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using a2_s3644668_s3643929.Data;

namespace a2_s3644668_s3643929.Migrations
{
    [DbContext(typeof(LoginContext))]
    [Migration("20200206051224_Login1")]
    partial class Login1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("a2_s3644668_s3643929.Models.BaseAccount", b =>
                {
                    b.Property<int>("AccountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountType")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("transactCount")
                        .HasColumnType("int");

                    b.HasKey("AccountNumber");

                    b.HasIndex("CustomerID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountNumber = 4100,
                            AccountType = 83,
                            Balance = 100.0,
                            CustomerID = 2100,
                            ModifyDate = new DateTime(2019, 12, 19, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            transactCount = 0
                        },
                        new
                        {
                            AccountNumber = 4101,
                            AccountType = 67,
                            Balance = 500.0,
                            CustomerID = 2100,
                            ModifyDate = new DateTime(2019, 12, 19, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            transactCount = 0
                        },
                        new
                        {
                            AccountNumber = 4200,
                            AccountType = 83,
                            Balance = 500.94999999999999,
                            CustomerID = 2200,
                            ModifyDate = new DateTime(2019, 12, 19, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            transactCount = 0
                        },
                        new
                        {
                            AccountNumber = 4300,
                            AccountType = 67,
                            Balance = 1250.5,
                            CustomerID = 2300,
                            ModifyDate = new DateTime(2019, 12, 19, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            transactCount = 0
                        });
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.BillPay", b =>
                {
                    b.Property<int>("BillPayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayeeID")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BillPayID");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("PayeeID");

                    b.ToTable("BillPays");
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("TFN")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 2100,
                            Address = "123 Fake Street",
                            City = "Melbourne",
                            CustomerName = "Matthew Bolger",
                            Phone = "(61)- 1234 5678",
                            PostCode = "3000"
                        },
                        new
                        {
                            CustomerID = 2200,
                            Address = "456 Real Road",
                            City = "Melbourne",
                            CustomerName = "Rodney Cocker",
                            Phone = "(61)- 1234 5679",
                            PostCode = "3005"
                        },
                        new
                        {
                            CustomerID = 2300,
                            CustomerName = "Shekhar Kalra",
                            Phone = "(61)- 1234 5680"
                        });
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.Login", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("FailedCtr")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Logins");

                    b.HasData(
                        new
                        {
                            UserID = 12345678,
                            CustomerID = 2100,
                            ModifyDate = new DateTime(2020, 2, 6, 5, 12, 23, 999, DateTimeKind.Utc).AddTicks(6180),
                            Password = "YBNbEL4Lk8yMEWxiKkGBeoILHTU7WZ9n8jJSy8TNx0DAzNEFVsIVNRktiQV+I8d2"
                        },
                        new
                        {
                            UserID = 38074569,
                            CustomerID = 2200,
                            ModifyDate = new DateTime(2020, 2, 6, 5, 12, 23, 999, DateTimeKind.Utc).AddTicks(6590),
                            Password = "EehwB3qMkWImf/fQPlhcka6pBMZBLlPWyiDW6NLkAh4ZFu2KNDQKONxElNsg7V04"
                        },
                        new
                        {
                            UserID = 17963428,
                            CustomerID = 2300,
                            ModifyDate = new DateTime(2020, 2, 6, 5, 12, 23, 999, DateTimeKind.Utc).AddTicks(6600),
                            Password = "LuiVJWbY4A3y1SilhMU5P00K54cGEvClx5Y+xWHq7VpyIUe5fe7m+WeI0iwid7GE"
                        });
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.Payee", b =>
                {
                    b.Property<int>("PayeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("PayeeID");

                    b.ToTable("Payees");
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("DestAccount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasMaxLength(1);

                    b.HasKey("TransactionID");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("DestAccount");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionID = 1,
                            AccountNumber = 4100,
                            Amount = 100.0,
                            Comment = "Acc Creation",
                            ModifyDate = new DateTime(2019, 12, 19, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 68
                        },
                        new
                        {
                            TransactionID = 2,
                            AccountNumber = 4101,
                            Amount = 500.0,
                            Comment = "Acc Creation",
                            ModifyDate = new DateTime(2019, 12, 19, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 68
                        },
                        new
                        {
                            TransactionID = 3,
                            AccountNumber = 4200,
                            Amount = 500.94999999999999,
                            Comment = "Acc Creation",
                            ModifyDate = new DateTime(2019, 12, 19, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 68
                        },
                        new
                        {
                            TransactionID = 4,
                            AccountNumber = 4300,
                            Amount = 1250.5,
                            Comment = "Acc Creation",
                            ModifyDate = new DateTime(2019, 12, 19, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 68
                        });
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.BaseAccount", b =>
                {
                    b.HasOne("a2_s3644668_s3643929.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.BillPay", b =>
                {
                    b.HasOne("a2_s3644668_s3643929.Models.BaseAccount", "Account")
                        .WithMany("BillPays")
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("a2_s3644668_s3643929.Models.Payee", "Payee")
                        .WithMany("BillPays")
                        .HasForeignKey("PayeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.Login", b =>
                {
                    b.HasOne("a2_s3644668_s3643929.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("a2_s3644668_s3643929.Models.Transaction", b =>
                {
                    b.HasOne("a2_s3644668_s3643929.Models.BaseAccount", "SourceAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("a2_s3644668_s3643929.Models.BaseAccount", "DestAccountObj")
                        .WithMany()
                        .HasForeignKey("DestAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
